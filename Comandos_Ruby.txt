cdcomandos
rvm list
rvm use 2.7.2
rvm gemset list
rvm gemset use demohh
comando pwd: indica en qué carpeta estás.
crear aplicacion: rails new rails_demohh
cd rails_demohh
sudo apt install tree
tree -L 2 -I node_modules
cat .ruby -version
volver a especificar el gemset:
rvm gemset list
rvm gemset use demohh
rails dbconsole: entrando a sqlite
control + D para salir de sqlite
Inicializa el Servidor: rails server
control + C para detener el servidor
rails server --help
rails server -b 0.0.0.0 para acceder externamente.
pwd
Abrir Visual Studio Code: code .
En VS-Code escribir en el archivo .ruby-version:
ruby-2.7.2@demohh
En la terminal: rails generate controller Say hello goodbye
Cuando dice "Editar el template" se refiere a editar la vista, carpeta "views"
Para generar una clave ssh para hacer login en github.
Obtener desde consola la clave ssh:
cat /home/usuario/.ssh/id_rsa.pub

Borrar directorio .git de la carpeta rails_demohh:
rm -r .git
Conectarlo con el github.
En la consola: irb y escribir "Hola mundo."
Cerrar la consola interactiva: Ctrl+D

Crear carpeta ruby dentro de la carpeta curso
En la consola Terminator, entrar a la carpeta ruby y escribir: code . (esto abre el IDE Visual Studio Code).

Para hacer comentarios de una línea sobre código: Ctrl+Shift+/

Probando subir un archivo txt desde git.

Clase Viernes.
Dentro de Usuario/curso crear un gemset llamado depot: rvm gemset create depot
Usar este gemset: rvm gemset use depot
Instalar rails: gem install rails -v 6.1.7
Ver lista de gemas: gem list
Verificar versión de Rails: rails -v
Para cambiar el motor de BD de sqlite3 (predeterminado) a PostgreSQL.
Para ver las opciones para cambiar la configuración: rails new --help
Crear nuevo proyecto llamado depot con PostgreSQL: rails new depot --database=postgresql
Usar docker: https://hub.docker.com y buscar la imagen de postgresql
Ver imagenes de docker: docker images
Crear una red llamada dev: 
docker network ls
docker network create dev
Ejecutar un contenedor docker con la imagen de postgresql y la red creada:
docker run --name postgres --network dev -p 5432:5432 -e POSTGRES_PASSWORD=123 -d postgres:10.21
Ejecutar la imagen de pgadmin4:
docker run --network dev -p 80:80 -e 'PGADMIN_DEFAULT_EMAIL=admin@depot.com' -e 'PGADMIN_DEFAULT_PASSWORD=123' -d dpage/pgadmin4
En Firefox: localhost:80 e ingresa al portal con el usuario y contraseña configurada.

Add new Server: 
Nombre de la BD: localhost
Host: postgresql (ponerle el nombre del contenedor)
Port: 5432
Maintenance database: postgres
Username: postgres
Password: 123

En la terminal:
docker ps
docker rm -f [ID o nombres del contenedor] borra los contenedores.
Levantar el docker compose para crear los contenedores: docker compose up -d
Eliminar los contenedores: docker compose down

En VSCode:
En el archivo .ruby-version escribir: ruby-2.6.6@depot

En la terminal:
rails generate scaffold Product title:string description:text image_url:string price:decimal
rails db:setup
rails db:create
rails s
rails db:status

rails server (iniciar el servidor)
Entrar el servidor: http://127.0.0.1:3000
Detener el servidor: Ctrl+C

Ejecutar en la terminal: rails db:migrate

rails db:migrate:status
rails db:rollback

Hacer cambios en VSCode en el archivo /db/migrate/xxx_create_product.rb
En la consola, ejecutar la migración: rails db:migrate

Crear restriccion de unicidad:
rails generate migration AddUniquenessToProductTitle
Editar el archivo en db/migrate/xxx_add_uniqueness_to_product_title

En Consola: rails db:migrate

Intalar bootstrap, en la terminal: sudo npm install -g sass
En la consola entramos a la carpeta sass

sass sass/styles.scss stylesheets/styles.css
